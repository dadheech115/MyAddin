<?xml version="1.0" encoding="utf-8" ?>
<code>
<task id="getCallbackTokenAsync">

<![CDATA[

Office.context.mailbox.getCallbackTokenAsync(function (asyncResult) {
	showMessage("Token: " + asyncResult.value);
});

]]>

</task>

<task id="getCallbackTokenRESTAsync">

<![CDATA[

Office.context.mailbox.getCallbackTokenAsync({"isRest":true}, function (asyncResult) {
	showMessage("Token: " + asyncResult.value);
});

]]>

</task>

<task id="getUserIdentityTokenAsync">

<![CDATA[  

Office.context.mailbox.getUserIdentityTokenAsync(function (asyncResult) {
	showMessage("Token: " + asyncResult.value);
});

]]>

</task>

<task id="addNotifications">

<![CDATA[  
function first() {
  Office.context.mailbox.item.notificationMessages.addAsync("progress", { 
    type: "progressIndicator", 
    message : "Progress indicator message" 
  }, second);
}

function second() {
  Office.context.mailbox.item.notificationMessages.addAsync("information", { 
    type: "informationalMessage", 
    message : "Informational message (will be replaced)", 
    icon : "iconid", 
    persistent: false 
  }, third);
}

function third() {
  Office.context.mailbox.item.notificationMessages.addAsync("information2", { 
    type: "informationalMessage", 
    message : "This should not be seen after it is removed in step 2.", 
    icon : "iconid", 
    persistent: false 
  }, fourth);
}

function fourth() {
  Office.context.mailbox.item.notificationMessages.addAsync("error", { 
    type: "errorMessage", 
    message : "Error Message" 
  }, function() {
    showMessage("Done");
  });
}

first();

]]>

</task>


<task id="removeNotifications">

<![CDATA[  

Office.context.mailbox.item.notificationMessages.removeAsync("information2");

]]>

</task>

<task id="replaceNotifications">

<![CDATA[  

Office.context.mailbox.item.notificationMessages.replaceAsync("information", {
	type: "informationalMessage", 
	message : "This is a replacement.", 
	icon : "iconid", 
	persistent: false 
});

]]>

</task>


<task id="getNotifications">

<![CDATA[  

Office.context.mailbox.item.notificationMessages.getAllAsync(function (asyncResult) {
	if (asyncResult.status != "failed") {
		Office.context.mailbox.item.notificationMessages.replaceAsync( "information", { 
			type: "informationalMessage", 
			message : "Found " + asyncResult.value.length + " notifications.", 
			icon : "iconid", 
			persistent: false 
		});
	}
});

]]>

</task>

<task id="setSettings">

<![CDATA[  

Office.context.roamingSettings.set("setting1", "Value1");
Office.context.roamingSettings.saveAsync(function (asyncResult) {
	if (asyncResult.status == "failed") {
		showMessage("Settings save failed: " + asyncResult.error.message);
	 } else {
		 showMessage("Settings saved");
	 }
})

]]>

</task>

<task id="getSettings">

<![CDATA[  

showMessage(Office.context.roamingSettings.get("setting1"));

]]>

</task>

<task id="setProperties">
<![CDATA[  

Office.context.mailbox.item.loadCustomPropertiesAsync(function (asyncResult) {
	var customProps = asyncResult.value;
	customProps.set("someProp", "some value");
	customProps.saveAsync(function (asyncResult) {
		showMessage("Properties saved");
	});
});

]]>
</task>

<task id="getProperties">
<![CDATA[  

Office.context.mailbox.item.loadCustomPropertiesAsync(function (asyncResult) {
	var customProps = asyncResult.value;
	showMessage(customProps.get("someProp"));
});

]]>
</task>

<task id="openPopupDialog">
<![CDATA[  

window.open("https://shubhhack.github.io/OutlookAppCommandTest/popup.html")

]]>
</task>

<task id="bodyGetAsync">
<![CDATA[  
Office.context.mailbox.item.body.getAsync(
  "text",
  {},
  function(asyncResult) {
    showMessage(asyncResult.value);
  }
);
]]>
</task>

</code>

